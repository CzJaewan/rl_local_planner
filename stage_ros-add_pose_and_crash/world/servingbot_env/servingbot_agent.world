show_clock 0
show_clock_interval 10000
resolution 0.2
threads 12
speedup 5.000

define sicklaser ranger
(
  sensor(
    pose [ 0 0 0.1 0 ]
    fov 270
    range [ 0.05 10 ]
    samples 512
  )
  color "random"
  block( 
    points 4
    point[0] [0 0]
    point[1] [0 1]
    point[2] [1 1]
    point[3] [1 0]
    z [0 0.21]
  )
)

define eyes ranger
(
  sensor(
    pose [ 0 0 0.1 0 ]
    fov 180
    range [ 0.0 6.0 ]
    samples 512
  )
  color "random"
  block( 
    points 4
    point[0] [0 0]
    point[1] [0 1]
    point[2] [1 1]
    point[3] [1 0]
    z [0 0.21]
  )
)



define floorplan model
(
  color "gray30"
  boundary 1

  gui_nose 0
  gui_grid 0
  gui_move 1
  gui_outline 0
  gripper_return 0
  fiducial_return 0
  ranger_return 1.000
  obstacle_return 1
)

floorplan
(
  name "blank"
  size [20.000 20.000 0.800]
  pose [0.000 0.000 0.000 0.000]
  bitmap "rink.png"
)

window
(
  size [1080 1896]
  
# Camera options 
  scale 35.000          
  center [0.000  0.000]
  rotate [ 0.000  0.000 ]


# GUI options
  show_data 0
  show_flags 0
  show_blocks 1
  show_clock 1
  show_footprints 0
  show_grid 1
  show_trailarrows 0
  show_trailrise 0
  show_trailfast 0
  show_occupancy 0
)


define agent position
(
  size [0.570 0.640 0.300] # sizes from MobileRobots' web site
  block( 
    points 8
    point[0] [0.14 0.00]
    point[1] [0.39 0.00]
    point[2] [0.57 0.20]
    point[3] [0.57 0.44]
    point[4] [0.39 0.64]
    point[5] [0.14 0.64]
    point[6] [0.00 0.455]
    point[7] [0.00 0.185]
    z [0 0.3]
  )
  # actual size

  localization "odom"
  
  # the pioneer's center of rotation is offset from its center of area
  origin [0.000 0.000 0.000 0.000]

  # draw a nose on the robot so we can see which way it points
  gui_nose 1

  color "random"
  drive "diff"		 	# Differential steering model.
  obstacle_return 1           	# Can hit things.
  ranger_return 0.500            	# reflects sonar beams
  blob_return 1               	# Seen by blobfinders  
  fiducial_return 1           	# Seen as "1" fiducial finders
  
  sicklaser(
	pose [ 0.200 0.000 0.000 0.000 ] 
  )


  # [ xmin xmax ymin ymax zmin zmax amin amax ]				
  # velocity_bounds [-0.5 0.5 0 0 0 0 -90.0 90.0 ]					
  # acceleration_bounds [-0.5 0.5 0 0 0 0 -90 90.0 ]

)

define human1 position
(
  # actual size
  size [0.400 0.400 0.600] # sizes from MobileRobots' web site

  localization "odom"
  
  # the pioneer's center of rotation is offset from its center of area
  origin [0.000 0.000 0.000 0.000]

  # draw a nose on the robot so we can see which way it points
  gui_nose 1

  color "random"
  drive "diff"		 	# Differential steering model.
  obstacle_return 1           	# Can hit things.
  ranger_return 0.500            	# reflects sonar beams
  blob_return 1               	# Seen by blobfinders  
  fiducial_return 1           	# Seen as "1" fiducial finders



)

define human2 position
(
  # actual size
  size [0.570 0.640 0.600] # sizes from MobileRobots' web site

  localization "odom"
  
  # the pioneer's center of rotation is offset from its center of area
  origin [0.000 0.000 0.000 0.000]

  # draw a nose on the robot so we can see which way it points
  gui_nose 1


  color "random"
  drive "diff"		 	# Differential steering model.
  obstacle_return 1           	# Can hit things.
  ranger_return 1.000            	# reflects sonar beams
  blob_return 1               	# Seen by blobfinders  
  fiducial_return 1           	# Seen as "1" fiducial finders


)


define human3 position
(
  size [0.570 0.640 0.600] # sizes from MobileRobots' web site
  block( 
    points 8
    point[0] [0.14 0.00]
    point[1] [0.39 0.00]
    point[2] [0.57 0.20]
    point[3] [0.57 0.44]
    point[4] [0.39 0.64]
    point[5] [0.14 0.64]
    point[6] [0.00 0.455]
    point[7] [0.00 0.185]
    z [0 0.3]
  )

  localization "odom"
  
  # the pioneer's center of rotation is offset from its center of area
  origin [0.000 0.000 0.000 0.000]
  
  color "random"
  drive "diff"		 	# Differential steering model.
  obstacle_return 1           	# Can hit things.
  ranger_return 1.000            	# reflects sonar beams
  blob_return 0               	# Seen by blobfinders  
  fiducial_return 0           	# Seen as "1" fiducial finders


)

agent( pose [-4.372 2.089 0.000 -114.432]  name "robot_0" color "red")

agent( pose [7.786 2.425 0.000 -46.266] name "robot_1" color "blue")
agent( pose [-6.939 -6.156 0.000 -62.838] name "robot_2" color "yellow")
agent( pose [5.943 1.139 0.000 123.178] name "robot_3" color "black")
#agent( pose [-4.00 6.93 0.00 -60.00] name "robot_4" color "green")
#agent( pose [-2.07 7.73 0.00 -85.00] name "robot_5")

#agent( pose [-0.00 8.00 0.00 270.00] name "robot_6")
#agent( pose [-2.07 7.73 0.00 285.00] name "robot_7")
#agent( pose [-4.00 6.93 0.00 300.00] name "robot_8")
#agent( pose [-5.66 5.66 0.00 315.00] name "robot_9")

human1( pose [3.493 -5.437 0.000 -29.694]  name "fake_0")
human2( pose [-5.366 -1.595 0.000 138.021] name "fake_1")
human3( pose [4.813 -2.631 0.000 54.583] name "fake_2")
#human1( pose [4.00 6.93 0.00 240.00] name "fake_3")
#human2( pose [2.07 7.73 0.00 255.00] name "fake_4")
#human3( pose [-7.73 2.07 0.00 0.00] name "fake_5")
#human1( pose [-6.93 4.00 0.00 -30.00]  name "fake_6")
#human2( pose [-5.66 5.66 0.00 -55.00] name "fake_7")
#human3( pose [-4.00 6.93 0.00 -60.00] name "fake_8")
#human3( pose [-2.07 7.73 0.00 -85.00] name "fake_9")

